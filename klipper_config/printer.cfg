# This file serves as documentation for config parameters. One may
# copy and edit this file to configure a new cartesian style
# printer. For delta style printers, see the "example-delta.cfg"
# file. For corexy/h-bot style printers, see the "example-corexy.cfg"
# file. Only common config sections are described here - see the
# "example-extras.cfg" file for configuring less common devices.

# DO NOT COPY THIS FILE WITHOUT CAREFULLY READING AND UPDATING IT
# FIRST. Incorrectly configured parameters may cause damage.

# A note on pin names: pins may be configured with a hardware name
# (such as "PA4") or with an Arduino alias name (such as "ar29" or
# "analog3"). In order to use Arduino names, the pin_map variable in
# the mcu section must be present and have a value of "arduino". Pin
# names may be preceded by an '!' to indicate that a reverse polarity
# should be used (eg, trigger on low instead of high). Input pins may
# be preceded by a '^' to indicate that a hardware pull-up resistor
# should be enabled for the pin. If the micro-controller supports
# pull-down resistors then an input pin may alternatively be preceded
# by a '~'.


# The stepper_x section is used to describe the stepper controlling
# the X axis in a cartesian robot.
[stepper_x]
step_pin: ar54
dir_pin: !ar55
enable_pin: !ar38
step_distance: .0125
endstop_pin: ^ar3
position_min: -24
position_endstop: -24
position_max: 210
homing_speed: 25.0
second_homing_speed: 2.0

[stepper_y]
step_pin: ar60
dir_pin: !ar61
enable_pin: !ar56
step_distance: .0125
endstop_pin: ^ar14
position_min: -20
position_endstop: -20
position_max: 210
homing_speed: 25.0
second_homing_speed: 2.0

[stepper_z]
step_pin: ar46
dir_pin: ar48
enable_pin: !ar62
step_distance: .000937
endstop_pin: ^ar18
position_endstop: 0.26
position_max: 200

# [stepper_z1]
# step_pin: ar36
# dir_pin: !ar34
# enable_pin: !ar30
# step_distance: .000937

[bltouch]
sensor_pin: ^ar19
control_pin: ar11
x_offset: 41.0
y_offset: 58.0
z_offset: 6.0

# The extruder section is used to describe both the stepper
# controlling the printer extruder and the heater parameters for the
# nozzle. The stepper configuration has the same settings as the
# stepper_x section and the heater configuration has the same settings
# as the heater_bed section (described below).
[extruder]
step_pin: ar26
dir_pin: ar28
enable_pin: !ar24
step_distance: .001242
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: ar10
sensor_type: EPCOS 100K B57560G104F
sensor_pin: analog13
min_extrude_temp: 175
min_temp: 0
max_temp: 255

[heater_bed]
heater_pin: ar8
sensor_type: NTC 100K beta 3950
sensor_pin: analog14
min_temp: 0
max_temp: 120

[heater_fan nozzle_fan]
pin: ar7
heater: extruder
fan_speed: 1.0
kick_start_time: 2.0

# [controller_fan controller_fan]
# pin: PE3
# max_power: 0.5

# [fan]
# pin: ar9

# Micro-controller information.
[mcu]
serial: /dev/serial/by-id/usb-1a86_USB2.0-Serial-if00-port0
pin_map: arduino

# [mcu rpi]
# serial: /tmp/klipper_host_mcu

# [adxl345]
# cs_pin: rpi:None

# [resonance_tester]
# accel_chip: adxl345
# probe_points: 100,100,20

# The printer section controls high level printer settings.
[printer]
kinematics: corexy
max_velocity: 250
max_accel: 1000
max_z_velocity: 25
max_z_accel: 15

[delayed_gcode delayed_printer_off]
initial_duration: 0.
gcode:
  {% if printer.idle_timeout.state == "Idle" %}
    POWER_OFF_PRINTER
  {% endif %}

[idle_timeout]
gcode:
  M84
  TURN_OFF_HEATERS
  UPDATE_DELAYED_GCODE ID=delayed_printer_off DURATION=120
timeout: 900

# Common EXP1 / EXP2 (display) pins
[board_pins]
aliases:
    # Common EXP1 header found on many "all-in-one" ramps clones
    EXP1_1=ar37, EXP1_3=ar17, EXP1_5=ar23, EXP1_7=ar27, EXP1_9=<GND>,
    EXP1_2=ar35, EXP1_4=ar16, EXP1_6=ar25, EXP1_8=ar29, EXP1_10=<5V>,
    # EXP2 header
    EXP2_1=ar50, EXP2_3=ar31, EXP2_5=ar33, EXP2_7=ar49, EXP2_9=<GND>,
    EXP2_2=ar52, EXP2_4=ar53, EXP2_6=ar51, EXP2_8=ar41, EXP2_10=<RST>
    # Pins EXP2_1, EXP2_6, EXP2_2 are also MISO, MOSI, SCK of bus "spi"
    # Note, some boards wire: EXP2_8=<RST>, EXP2_10=ar41

# [output_pin caselight]
# pin: PH3
# pwm: false
# value: 1

[gcode_macro START_PRINT]
gcode:
	# Home
	G28
	# Move the platform down 0.5mm
	G1 Z0.5 F250 
	# Prime the extruder
	G92 E0
	G1 E10 F200
	G92 E0

[gcode_macro END_PRINT]
gcode:
	M104 S0
	M140 S0
	# ;Retract the filament
	G92 E1
	G1 E-1 F300
	MOVE_DOWN
	G0 X10 Y200 F9000
	MOTOR_OFF

[gcode_macro MOVE_DOWN]
gcode:
  SAVE_GCODE_STATE NAME=move_down_state
  G91
  G1 Z25 F250
  RESTORE_GCODE_STATE NAME=move_down_state	

[gcode_macro MOTOR_OFF]
gcode:
  M84

[gcode_macro POWER_OFF_PRINTER]
gcode:
  {action_call_remote_method("set_device_power",
                             device="printer",
                             state="off")}

[virtual_sdcard]
path: ~/sdcard/

[bed_screws]
screw1: 10, 10
screw1_name: vorne links
screw2: 200, 10
screw2_name: vorne rechts
screw3: 200, 200
screw3_name: hinten rechts
screw4: 10, 200
screw4_name: hinten links
horizontal_move_z: 8
probe_height: 0.5

[screws_tilt_adjust]
screw1: -3, -20
screw1_name: vorne links
screw2: 131, -20
screw2_name: vorne rechts
screw3: 131, 114
screw3_name: hinten rechts
screw4: -3, 114
screw4_name: hinten links
horizontal_move_z: 8
speed: 100
screw_thread: CW-M4

#x_offset: 41.0
#y_offset: 58.0

# [bed_mesh]
# speed: 100
# horizontal_move_z: 6
# mesh_min: 38, 38
# mesh_max: 171, 171
# probe_count: 7,7
# # probe_count: 11,11
# algorithm: bicubic

[homing_override]
gcode:
	G28 Y
	G28 X
	G0 X10 Y-15 F3000
	#G0 Y-15 F1000
	G28 Z

[temperature_sensor raspberry_pi]
sensor_type: rpi_temperature

[neopixel temp_leds]
pin: ar6
chain_count: 3
#color_order: GRB
#   Set the pixel order required by the LED hardware. Options are GRB,
#   RGB, GRBW, or RGBW. The default is GRB.
#initial_RED: 0.0
#initial_GREEN: 0.0
#initial_BLUE: 0.0
#initial_WHITE: 0.0
#   Sets the initial LED color of the Neopixel. Each value should be
#   between 0.0 and 1.0. The WHITE option is only available on RGBW
#   LEDs. The default for each color is 0.

[gcode_macro M105]
rename_existing:            M105.1
gcode:  

   M105.1

   #if the extruder is off
   {% if printer.extruder.target == 0 %}

      #Set the LED to red if the extruder is off but is still hot, otherwise 
      # set the color to green
      {% if printer.extruder.temperature > 60.0 %}
         SET_LED LED=temp_leds RED=1 GREEN=0 BLUE=0 TRANSMIT=1
      {% else %}
         SET_LED LED=temp_leds RED=0 GREEN=1 BLUE=0 TRANSMIT=1
      {% endif %}     

   {% else %}

         #if the extruder temp is at target temperature 
         {% if printer.extruder.temperature >= printer.extruder.target - 4.0 %}
            SET_LED LED=temp_leds RED=1 GREEN=0 BLUE=0 TRANSMIT=1

         #if the extruder is still heating
         {% else %}
            {% set scaler = printer.extruder.temperature|float / printer.extruder.target|float %}
            SET_LED LED=temp_leds RED={ scaler|float * 1 } GREEN=0 BLUE=0 TRANSMIT=1
         {% endif %}  

   {% endif %}
   
############################
##### CREATED BY KIAUH #####
############################
[display_status]
[pause_resume]
[include mainsail_macros.cfg]
############################

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 23.159
#*# pid_ki = 1.430
#*# pid_kd = 93.793
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 62.039
#*# pid_ki = 0.938
#*# pid_kd = 1025.978
